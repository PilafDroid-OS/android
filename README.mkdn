<p align="center">
<img src="https://github.com/ricedroidOSS/android/blob/thirteen/sushi.png">
</p>

What is RiceDroid?
---------------
Ricedroid is a FREE OPENSOURCE Android Operating System based on LineageOS and crDroid, that aims to provide necessary "ricing" aka customizations for ANDROID while being fast and stable. This operating system is highly inspired by Oxygen OS (10-11) and nothingOS, we strive to make things different but not too far from AOSP.

Terminology
---------------
The term \'rice\' is used to describe a person's unix desktop where \'ricing\' is an act where someone customizes their desktop such as the changing icons, panels or system interface.

source: https://jie-fang.github.io/blog/basics-of-ricing


Maintainership
---------------
Requirements:

1. Device trees must be properly maintained, patches applied to the tree must be either rom source changes adaptation,bug fixes or improvements.
2. Must have no known issues in his/her current device community.
3. Approved by the maintainership application form reviewers. 

Maintainership application form link: https://docs.google.com/forms/d/1TSnWigcR5cZmeABU07gvbBPd_keqlteLcLq4iJif-qw/viewform
 
Getting Started
---------------
**Initialize local repository (thanks to apon77 for repo init script)**

```bash
repo init --depth=1 --no-repo-verify -u https://github.com/AndreyDenikin97/android -b 13 -g default
```

**Sync up with this command:**
```bash
repo sync -c --no-clone-bundle --force-remove-dirty --optimized-fetch --prune --force-sync -j8

# --force-remove-dirty option can be used to remove previously used projects with uncommitted changes. (to prevent misc sync failures etc.)

```

Preparing device for this ROM
---------------

**Inherit Lineage vendor common stuffs**
```bash
$(call inherit-product, vendor/lineage/config/common_full_phone.mk)
```

Build Flags
---------------
```bash
# chipset flag enclose var with "" if more than one
# friendly tip: builders can use init_xxx.cpp as workaround for spacing
# e.g. property_override("ro.rice.chipset", "Snapdragon 870 5G");
RICE_CHIPSET := "snapdragon x"

# chipset flag enclose var with "" if more than one
# friendly tip: builders can use init_xxx.cpp as workaround for spacing
# e.g. property_override("ro.rice.maintainer", "get riced");
RICE_MAINTAINER := "a maintainer"

# chipset flag enclose var with "" if more than one
# this will reflect on build/display version, a firmware package/zip name 
# e.g. riceDroid-7.0-COMMUNITY-device-AOSP.zip - AOSP is the default package type, WITH_GMS will override the package type to PIXEL
RICE_PACKAGE_TYPE := "VANILLA AOSP"

# Sushi Bootanimation (only 720/1080p/1440 supported. if not defined, bootanimation is google bootanimation)
SUSHI_BOOTANIMATION := 720/1080/1440

# Aperture Camera (default: not defined - skipped by the compiler)
TARGET_BUILD_APERTURE_CAMERA := true/false

# Graphene Camera (default: not defined - skipped by the compiler)
TARGET_BUILD_GRAPHENEOS_CAMERA := true/false

# disable/enable blur support, default is false
TARGET_ENABLE_BLUR := true/false

# UDFPS ICONS/ANIMATIONS
TARGET_HAS_UDFPS := true/false

# Allow usage of custom binary linker (LD), default is false
TARGET_KERNEL_OPTIONAL_LD := true/false

# Spoof build description/fingerprint as pixel device
TARGET_USE_PIXEL_FINGERPRINT := true/false
```

GMS Flags
---------------
```bash
# GMS build flags, if none were defined the package build type will be AOSP (default: false)
WITH_GMS := true/false - ship with GMS packages, replaces misc AOSP packages with Google packages.

# Customized GMS Flags 
# WITH_GMS flag is required

# Wether to use google (true) or AOSP (false) telephony package bundle. (defaults: false for gms core, true for pixel builds)
TARGET_USE_GOOGLE_TELEPHONY := true/false

# Compiler will only build GMS playstore services, its dependencies, and Gboard app.
# package type will change from PIXEL/GMS -> CORE
TARGET_CORE_GMS := true/false

# extra flag under TARGET_CORE_GMS
TARGET_CORE_GMS_EXTRAS := true/false - extra packages for core build type (velvet and photos)
```

Adapting System Properties for riceDroid
---------------
```bash
# Enabling MIUI camera mode support
# Add miui camera flag to device tree makefiles
TARGET_USES_MIUI_CAMERA := true
```

Build
---------------
**Set up environment**
```bash
. build/envsetup.sh
```
**Build the code**
```bash
brunch "device_codename"
```

Credits
---------------
* [**AOSPA**](https://github.com/AOSPA)
* [**AICP**](https://github.com/AICP)
* [**Bootleggers**](https://github.com/BootleggersROM)
* [**crDroid**](https://github.com/crdroidandroid)
* [**Corvus-AOSP**](https://github.com/Corvus-R)
* [**Derpfest**](https://github.com/Derpfest-12)
* [**DotOS**](https://github.com/DotOS)
* [**Evolution-X**](https://github.com/Evolution-X)
* [**Flamingo-OS**](https://github.com/Flamingo-OS)
* [**LineageOS**](https://github.com/LineageOS)
* [**Octavi-OS**](https://github.com/Octavi-OS)
* [**Omnirom**](https://github.com/omnirom)
* [**PixelDust Caf**](https://github.com/pixeldust-project-caf)
* [**Project-Fluid**](https://github.com/Project-Fluid)
* [**Project Kaleidoscope**](https://github.com/Project-Kaleidoscope)
* [**Project Radiant**](https://github.com/ProjectRadiant)
* [**SparkOS**](https://github.com/Spark-Rom)
* [**StagOS**](https://github.com/StagOS)
* [**Xdroid-OSS**](https://github.com/xdroid-oss)


# android
